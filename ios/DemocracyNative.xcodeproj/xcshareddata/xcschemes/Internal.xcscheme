<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1210"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "cp &quot;${PROJECT_DIR}/../.env.internal&quot; &quot;${PROJECT_DIR}/../.env&quot;&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
                     BuildableName = "DemocracyNative.app"
                     BlueprintName = "DemocracyNative"
                     ReferencedContainer = "container:DemocracyNative.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Get the ASSOCIATED_DOMAINS value from .env file&#10;ASSOCIATED_DOMAINS=$(grep &apos;ASSOCIATED_DOMAINS&apos; $PROJECT_DIR/../.env.internal | xargs)&#10;IFS=&apos;=&apos; read -ra ADDR &lt;&lt;&lt; &quot;$ASSOCIATED_DOMAINS&quot;&#10;IFS=&apos;,&apos; read -ra DOMAINS &lt;&lt;&lt; &quot;${ADDR[1]}&quot;&#10;&#10;# Construct the entitlements&#10;ENTITLEMENTS_CONTENT=&quot;    &lt;key&gt;com.apple.developer.associated-domains&lt;/key&gt;&#10;    &lt;array&gt;&quot;&#10;for domain in &quot;${DOMAINS[@]}&quot;; do&#10;    ENTITLEMENTS_CONTENT=&quot;$ENTITLEMENTS_CONTENT&#10;        &lt;string&gt;$domain&lt;/string&gt;&quot;&#10;done&#10;&#10;ENTITLEMENTS_CONTENT=&quot;$ENTITLEMENTS_CONTENT&#10;    &lt;/array&gt;&quot;&#10;# Replace or insert the entitlements in the DemocracyNative.entitlements file&#10;if grep -q &quot;com.apple.developer.associated-domains&quot; $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements; then&#10;&#10;    ENTITLEMENTS_CONTENT=$(echo $ENTITLEMENTS_CONTENT | tr &apos;\n&apos; &apos; &apos;)&#10;    ENTITLEMENTS_CONTENT=$(echo &quot;$ENTITLEMENTS_CONTENT&quot; | sed -e &apos;s/[\/&amp;]/\\&amp;/g&apos;)&#10;    # Replace existing entitlements&#10;    sed -i &apos;&apos; &quot;/com.apple.developer.associated-domains/,/\/array&gt;/c\\&#10;$ENTITLEMENTS_CONTENT&#10;&quot; $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements&#10;else&#10;    ENTITLEMENTS_CONTENT=&quot;$ENTITLEMENTS_CONTENT&#10;        &lt;/dict&gt;&quot;&#10;&#10;    ENTITLEMENTS_CONTENT=$(echo $ENTITLEMENTS_CONTENT | tr &apos;\n&apos; &apos; &apos;)&#10;    ENTITLEMENTS_CONTENT=$(echo &quot;$ENTITLEMENTS_CONTENT&quot; | sed -e &apos;s/[\/&amp;]/\\&amp;/g&apos;)&#10;    # Insert entitlements before the closing &lt;/dict&gt;&#10;    echo &quot;sed -i &apos;&apos; \&quot;s/&lt;\/dict&gt;/$ENTITLEMENTS_CONTENT/\&quot; $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements&quot;&#10;    sed -i &apos;&apos; &quot;s/&lt;\/dict&gt;/$ENTITLEMENTS_CONTENT/&quot; $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements&#10;fi&#10;&#10;plutil -convert xml1 -o - $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements | xmllint --format - &gt;&gt; $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements_tmp &#10;mv $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements_tmp $PROJECT_DIR/$PRODUCT_NAME/$PRODUCT_NAME.entitlements &#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
                     BuildableName = "DemocracyNative.app"
                     BlueprintName = "DemocracyNative"
                     ReferencedContainer = "container:DemocracyNative.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "cp ${PROJECT_DIR}/GoogleService-Info.internal.plist ${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist&#10;&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
                     BuildableName = "DemocracyNative.app"
                     BlueprintName = "DemocracyNative"
                     ReferencedContainer = "container:DemocracyNative.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PostActions>
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
               BuildableName = "DemocracyNative.app"
               BlueprintName = "DemocracyNative"
               ReferencedContainer = "container:DemocracyNative.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Internal.Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "DemocracyNativeTests.xctest"
               BlueprintName = "DemocracyNativeTests"
               ReferencedContainer = "container:DemocracyNative.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Internal.Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "DemocracyNative.app"
            BlueprintName = "DemocracyNative"
            ReferencedContainer = "container:DemocracyNative.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Internal.Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "DemocracyNative.app"
            BlueprintName = "DemocracyNative"
            ReferencedContainer = "container:DemocracyNative.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Internal.Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Internal.Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
